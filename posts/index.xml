<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Yindongliang</title>
    <link>https://yindongliang.com/posts/</link>
    <description>Recent content in Posts on Yindongliang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 22 Sep 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://yindongliang.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>看了下 Protobuf</title>
      <link>https://yindongliang.com/posts/Hello-Protobuf/</link>
      <pubDate>Tue, 22 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yindongliang.com/posts/Hello-Protobuf/</guid>
      <description>RPC RPC，全称 Remote Procedure Call，中文叫远程过程调用。 go 语言基于标准库实现了一套自己的 RPC 调用规则：方法只能有两个可序列化的参数，其中第二个参数是指</description>
    </item>
    
    <item>
      <title>乒乓理财，了解一下？</title>
      <link>https://yindongliang.com/posts/pingpang-financing/</link>
      <pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yindongliang.com/posts/pingpang-financing/</guid>
      <description>谁需要看 如果你有100 万要理财，这个不适合你。如果你只有 1 万？那向你介绍一下我总结的理财方案~ 认识乒乓球拍 关于球拍的分类，我从各个角度出发整</description>
    </item>
    
    <item>
      <title>使用 typora 来编辑你的 hugo 博客</title>
      <link>https://yindongliang.com/posts/use-typora-write-hugo-blog/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://yindongliang.com/posts/use-typora-write-hugo-blog/</guid>
      <description>最近 typroa 用的比较多，然后又想着继续维护在 github page 的博客，觉得把 typora 编辑完的东西再复制到博客项目里很麻烦，于是开始了一番折腾。 目标是啥 在 typora 写的笔记放在</description>
    </item>
    
    <item>
      <title>浅谈 Django-REST-Framework 的设计与源码</title>
      <link>https://yindongliang.com/posts/talk-about-django-rest-framework/</link>
      <pubDate>Thu, 20 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://yindongliang.com/posts/talk-about-django-rest-framework/</guid>
      <description>最近又重新接触 DRF，翻看文档发现，当时很难理解的东西，如今一看就懂了，顺带看了源码，也比较容易理解，至少比 Django 的源码简单不少。下面开始从 DRF 的</description>
    </item>
    
    <item>
      <title>Vagrant 虚拟机 Ubuntu16.04 安装 MariaDB</title>
      <link>https://yindongliang.com/posts/ubuntu-MariaDB/</link>
      <pubDate>Mon, 10 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://yindongliang.com/posts/ubuntu-MariaDB/</guid>
      <description>由于宿主机安装了 MySQL，为了避免安装 MariaDB 造成 MySQL 无法使用，所以在 Vagrant 中安装 Mariadb。 更换网易 apt-get 源 /etc/apt/sources.list 读取源软件列表 sudo apt update 更新软件版本 sudo apt upgrade</description>
    </item>
    
    <item>
      <title>Ubuntu 下部署 Django 应用</title>
      <link>https://yindongliang.com/posts/ubuntu-deploy-django/</link>
      <pubDate>Tue, 28 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://yindongliang.com/posts/ubuntu-deploy-django/</guid>
      <description>做了一个Django小应用，主要内容是一个论坛，经过好几天的研究，也可以在服务器端运行了，以下所有代码中的操作都需要在命令行运行。 安装MyS</description>
    </item>
    
  </channel>
</rss>